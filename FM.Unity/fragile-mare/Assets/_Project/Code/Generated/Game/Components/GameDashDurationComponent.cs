//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDashDuration;

    public static Entitas.IMatcher<GameEntity> DashDuration {
        get {
            if (_matcherDashDuration == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DashDuration);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDashDuration = matcher;
            }

            return _matcherDashDuration;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _Project.Code.Gameplay.Features.Movement.Dash.DashDuration dashDuration { get { return (_Project.Code.Gameplay.Features.Movement.Dash.DashDuration)GetComponent(GameComponentsLookup.DashDuration); } }
    public float DashDuration { get { return dashDuration.Value; } }
    public bool hasDashDuration { get { return HasComponent(GameComponentsLookup.DashDuration); } }

    public GameEntity AddDashDuration(float newValue) {
        var index = GameComponentsLookup.DashDuration;
        var component = (_Project.Code.Gameplay.Features.Movement.Dash.DashDuration)CreateComponent(index, typeof(_Project.Code.Gameplay.Features.Movement.Dash.DashDuration));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceDashDuration(float newValue) {
        var index = GameComponentsLookup.DashDuration;
        var component = (_Project.Code.Gameplay.Features.Movement.Dash.DashDuration)CreateComponent(index, typeof(_Project.Code.Gameplay.Features.Movement.Dash.DashDuration));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveDashDuration() {
        RemoveComponent(GameComponentsLookup.DashDuration);
        return this;
    }
}

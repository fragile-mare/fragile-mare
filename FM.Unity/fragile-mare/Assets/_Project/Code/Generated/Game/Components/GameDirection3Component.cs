//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDirection3;

    public static Entitas.IMatcher<GameEntity> Direction3 {
        get {
            if (_matcherDirection3 == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Direction3);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDirection3 = matcher;
            }

            return _matcherDirection3;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _Project.Code.Gameplay.Common.Direction3 direction3 { get { return (_Project.Code.Gameplay.Common.Direction3)GetComponent(GameComponentsLookup.Direction3); } }
    public UnityEngine.Vector3 Direction3 { get { return direction3.Value; } }
    public bool hasDirection3 { get { return HasComponent(GameComponentsLookup.Direction3); } }

    public GameEntity AddDirection3(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.Direction3;
        var component = (_Project.Code.Gameplay.Common.Direction3)CreateComponent(index, typeof(_Project.Code.Gameplay.Common.Direction3));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceDirection3(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.Direction3;
        var component = (_Project.Code.Gameplay.Common.Direction3)CreateComponent(index, typeof(_Project.Code.Gameplay.Common.Direction3));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveDirection3() {
        RemoveComponent(GameComponentsLookup.Direction3);
        return this;
    }
}
